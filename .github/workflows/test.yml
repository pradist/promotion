name: run tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go v 1.18
        uses: actions/setup-go@v3
        with:
          go-version: 1.18

      - name: Install mockery
        run: |
          sudo apt-get -y install mockery

      - name: Generate mockery
        run: |
          mockery --all --keeptree --recursive

      - name: Install golangci-lint
        run: |
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.48.0

      - name: Run golangci-lint
        run: |
          golangci-lint run -v --color always --timeout 5m

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go v 1.18
        uses: actions/setup-go@v3
        with:
          go-version: 1.18

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install mockery
        run: |
          sudo apt-get -y install mockery

      - name: Generate mockery
        run: |
          mockery --all --keeptree --recursive

      - name: Run tests
        run: go test ./... -v

  coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go v 1.18
        uses: actions/setup-go@v3
        with:
          go-version: 1.18

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install mockery
        run: |
          sudo apt-get -y install mockery

      - name: Generate mockery
        run: |
          mockery --all --keeptree --recursive

      - name: Run coverage
        run: go test ./... -race -coverprofile=coverage.out -covermode=atomic

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3

      - name: Upload coverage reports to Codecov
        run: |
          # Replace `linux` below with the appropriate OS
          # Options are `alpine`, `linux`, `macos`, `windows`
          curl -Os https://uploader.codecov.io/latest/linux/codecov
          chmod +x codecov
          ./codecov -t ${CODECOV_TOKEN}