name: Run Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go v1.22.2
        uses: actions/setup-go@v3
        with:
          go-version: 1.22.2

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install mockgen
        run: go install github.com/golang/mock/mockgen@v1.6.0

      - name: Generate mock
        run: go generate ./...

      - name: Clean Go build cache
        run: go clean -cache -testcache -modcache

      - name: Install golangci-lint
        run: go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.55.2

      - name: Run golangci-lint
        run: golangci-lint run -v --color always --timeout 5m

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go v1.22.2
        uses: actions/setup-go@v3
        with:
          go-version: 1.22.2

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install mockgen
        run: go install github.com/golang/mock/mockgen@v1.6.0

      - name: Generate mock
        run: go generate ./...

      - name: Run tests
        run: go test ./... -v

  coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go v1.22.2
        uses: actions/setup-go@v3
        with:
          go-version: 1.22.2

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install mockgen
        run: go install github.com/golang/mock/mockgen@v1.6.0

      - name: Generate mock
        run: go generate ./...

      - name: Run coverage
        run: go test ./... -race -coverprofile=coverage.out -covermode=atomic

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload fallback report manually
        run: |
          curl -Os https://uploader.codecov.io/latest/linux/codecov
          chmod +x codecov
          ./codecov -t ${CODECOV_TOKEN}
