on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

name: run tests
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v3
      - name: Install mockery
        run: |
          sudo apt-get -y install mockery
      - name: Generate mockery
        run: |
          mockery --all --keeptree --recursive
      - name: golangci-lint
        uses: reviewdog/action-golangci-lint@v2

  test:
    strategy:
      matrix:
        go-version: [1.18.x]
        platform: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Install Go
        if: success()
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
      - name:  Install mockery
        run:   |
              if [ "$RUNNER_OS" == "Linux" ]; then
                    sudo apt-get -y install mockery
              elif [ "$RUNNER_OS" == "Windows" ]; then
                    choco install mockery
              elif [ "$RUNNER_OS" == "macOS" ]; then
                    brew install mockery
              else
                    echo "$RUNNER_OS not supported"
                    exit 1
              fi
        shell: bash
      - name: Generate mockery
        run: |
          mockery --all --keeptree --recursive
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Run tests
        run: go test ./... -v -covermode=count

  coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        if: success()
        uses: actions/setup-go@v3
        with:
          go-version: 1.18.x
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run coverage
        run: go test ./... -race -coverprofile=coverage.out -covermode=atomic
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
      - name: Upload coverage reports to Codecov
        run: |
          # Replace `linux` below with the appropriate OS
          # Options are `alpine`, `linux`, `macos`, `windows`
          curl -Os https://uploader.codecov.io/latest/linux/codecov
          chmod +x codecov
          ./codecov -t ${CODECOV_TOKEN}